!function(t){function __webpack_require__(i){if(e[i])return e[i].exports;var n=e[i]={exports:{},id:i,loaded:!1};return t[i].call(n.exports,n,n.exports,__webpack_require__),n.loaded=!0,n.exports}var e={};return __webpack_require__.m=t,__webpack_require__.c=e,__webpack_require__.p="",__webpack_require__(0)}([function(t,e){"use strict";function elemIdx(t){return Math.floor(t/n)}function bitPlace(t){return t%n}function numElemsNeeded(t){return Math.ceil(t/n)}function numOn(t,e){for(var i=0,r=numElemsNeeded(e),u=e%n,f=0;f<r;f++)i+=f===r-1&&u>0?popcount(t[f],u):popcount(t[f]);return i}function popcount(t,e){return void 0!==e&&(t&=(1<<e)-1),t-=t>>1&1431655765,t=(858993459&t)+(t>>2&858993459),t=t+(t>>4)&252645135,t+=t>>8,t+=t>>16,127&t}function fill(t,e,i){if(void 0===i&&(i=t.length),t.fill)return void t.fill(e,0,i);for(var n=0;n<i;n++)t[n]=e}var i=function(){function BitSet(t,e){this._numOn=0,this._size=0,e?this.setFromBuffer(e,t):this.setSize(t)}return BitSet.prototype.check=function(t){return 0!==(this._buffer[elemIdx(t)]&1<<bitPlace(t))},BitSet.prototype.set=function(t,e){var i=this.check(t);e!==i&&(e?this._buffer[elemIdx(t)]|=1<<bitPlace(t):this._buffer[elemIdx(t)]&=~(1<<bitPlace(t)),this._numOn+=e?1:-1)},BitSet.prototype.setAll=function(t){if(t){var e=this._size%n;0===e?fill(this._buffer,r):(fill(this._buffer,r,this._buffer.length-1),this._buffer[this._buffer.length-1]=(1<<e)-1),this._numOn=this._size}else fill(this._buffer,0),this._numOn=0},BitSet.prototype.numOn=function(){return this._numOn},BitSet.prototype.numOff=function(){return this.size()-this.numOn()},BitSet.prototype.size=function(){return this._size},BitSet.prototype.any=function(){return this.numOn()>0},BitSet.prototype.all=function(){return this.numOn()===this.size()},BitSet.prototype.none=function(){return!this.any()},BitSet.prototype.setSize=function(t){if(t!==this._size){this._size=t;var e=this._buffer,i=this._buffer=new Uint32Array(numElemsNeeded(t));if(e)if(i.length<e.length){i.set(e.subarray(0,i.length));var r=t%n;r>0&&(i[i.length-1]&=(1<<r)-1),this._numOn=numOn(i,t)}else i.set(e);else this._numOn=0}},Object.defineProperty(BitSet.prototype,"buffer",{get:function(){return this._buffer.buffer},enumerable:!0,configurable:!0}),BitSet.prototype.setFromBuffer=function(t,e){this._buffer=new Uint32Array(t),this._size=e,this._numOn=numOn(this._buffer,e)},BitSet}();e.BitSet=i;var n=8*Uint32Array.BYTES_PER_ELEMENT,r=4294967295}]);